@page "/objectdetection"
@using static TransformersSharp.Pipelines.ObjectDetectionPipeline

@attribute [StreamRendering(true)]
@rendermode InteractiveServer
@inject DemoApiClient DetectionApi

<PageTitle>Object Detection</PageTitle>

<style>
    :root {
        --dotnet-purple: #512bd4;
        --dotnet-purple-dark: #3b1e8a;
        --dotnet-purple-light: #a084e8;
        --dotnet-yellow: #ffd600;
    }
    .container {
        position: relative;
    }
    .detection {
        position: absolute;
        color: var(--dotnet-yellow);
        border: 4px solid var(--dotnet-purple);
        background: rgba(81, 43, 212, 0.15);
        font-size: 2.2em;
        font-family: "Segoe UI", Arial, sans-serif;
        border-radius: 8px;
        box-shadow: 0 0 8px var(--dotnet-purple-light);
        padding: 2px 8px;
        pointer-events: none;
    }
    .object-detect-form {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        max-width: 420px;
        margin-bottom: 1.5rem;
    }
    .object-detect-row {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        align-items: center;
    }
    .object-detect-btn {
        background: var(--dotnet-purple);
        color: white;
        border: none;
        border-radius: 4px;
        padding: 0.5em 1.2em;
        font-size: 1em;
        font-family: inherit;
        cursor: pointer;
        transition: background 0.2s;
    }
    .object-detect-btn:disabled {
        background: var(--dotnet-purple-light);
        cursor: not-allowed;
    }
    .object-detect-btn:not(:disabled):hover {
        background: var(--dotnet-purple-dark);
    }
</style>

<h1 style="color: var(--dotnet-purple); font-family: 'Segoe UI', Arial, sans-serif;">Object Detection Demo</h1>

<div class="object-detect-form">
    <div class="object-detect-row">
        <input @bind="imageUrl" placeholder="Enter image URL" style="width: 320px; border: 2px solid var(--dotnet-purple); border-radius: 4px; padding: 0.4em; font-size: 1em;" />
        <button class="object-detect-btn" @onclick="DetectFromUrl" disabled="@isLoading">Detect</button>
    </div>
    <div class="object-detect-row">
        <button class="object-detect-btn" @onclick="() => SetUrl(urlAnthonyDog)" disabled="@isLoading">Use Anthony Dog</button>
        <button class="object-detect-btn" @onclick="() => SetUrl(urlBrunoDog)" disabled="@isLoading">Use Bruno Dog</button>
        <button class="object-detect-btn" @onclick="() => SetUrl(urlSampleFireTruck)" disabled="@isLoading">Use Sample Fire Truck</button>
    </div>
</div>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (detectedObjects != null)
{
    <div class="container">
        <img src="@detectedObjects.Url" alt="Image for detection">
        @if (detectedObjects.DetectionResults != null)
        {
            @foreach (var o in detectedObjects.DetectionResults)
            {
                <div class="detection" style="left: @(o.Box.XMin)px; top: @(o.Box.YMin)px; height: @(o.Box.YMax - o.Box.YMin)px; width: @(o.Box.XMax - o.Box.XMin)px ;">@o.Label</div>
            }
        }
    </div>
}

@code {
    private DetectResponse? detectedObjects;
    private const string urlAnthonyDog = "https://raw.githubusercontent.com/tonybaloney/TransformersSharp/refs/heads/asr/Demo/assets/dog.jpg";
    private const string urlBrunoDog = "https://raw.githubusercontent.com/microsoft/Generative-AI-for-beginners-dotnet/main/03-CoreGenerativeAITechniques/src/images/AceStick.jpg";
    private const string urlSampleFireTruck = "https://raw.githubusercontent.com/Azure-Samples/netaivideoanalyzer/main/src/images/firetruck/102.jpg";
    private string imageUrl = urlAnthonyDog;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        //await DetectFromUrl();
    }

    private async Task DetectFromUrl()
    {
        isLoading = true;
        detectedObjects = null;
        StateHasChanged();
        detectedObjects = await DetectionApi.GetObjectDetectionAsync(imageUrl);
        isLoading = false;
        StateHasChanged();
    }

    private void SetUrl(string url)
    {
        imageUrl = url;
    }
}
